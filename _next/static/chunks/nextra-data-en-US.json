{"/python/get-file-hash":{"title":"Hash File Content","data":{"":"import hashlib\nimport os\n\ndef get_file_hash(path: str) -> str:\n\"\"\"\nif file is too large, read the first 8192 bytes\n\"\"\"\nwith open(path, 'rb') as file:\nmd5 = hashlib.md5()\nif os.path.getsize(path) > 8192:\nmd5.update(file.read(8192))\nelse:\nmd5.update(file.read())\nreturn md5.hexdigest()"}},"/":{"title":"Likianta Code Snippet Book","data":{"":"Craft your fancy works with the loved code snippets.\n\nYou can find all examples in the navigation bar on the top-right.\nUse ctrl + k to search in full-text."}},"/python/get-file-size":{"title":"Get File Size","data":{"":"import os\n\ndef get_file_size(path: str) -> int:\nreturn os.path.getsize(file_path)\n\ndef get_file_size_str(path: str) -> str:\nsize = float(get_file_size(path))\nfor unit in ('B', 'KB', 'MB', 'GB', 'TB'):\nif size < 1024:\nreturn f'{size:.2f}{unit}'\nsize /= 1024\nreturn f'{size:.2f}PB'"}},"/python/get-func-source":{"title":"Get Function Source","data":{"":"","requirements#Requirements":"astunparse\n\noptional (for test):\nastpretty\nlk-logger","code#Code":"get_func_source.py:\nimport ast\nimport inspect\nimport typing as t\nfrom types import FunctionType\n\nfrom astunparse import unparse\n\n\ndef get_source(\nfunc: FunctionType,\nstrip_decorators: bool = True,\nstrip_signature: bool = False,  # aka. body_only\nstrip_return: bool = False,\n) -> str:\n\"\"\"\nhttps://stackoverflow.com/a/57040815\nnotice: if either `strip_decorators` or `strip_signature` is True, the\noutput code may slightly changed by removing *unnecessary* line breaks.\n\"\"\"\nbody: t.List[ast.stmt]\ncode: str\nmodule: t.Union[ast.AST, ast.Module]\nout: str\ntarget_func: t.Union[ast.stmt, ast.FunctionDef]\n\ncode = inspect.getsource(func)\nif strip_decorators or strip_signature:\nmodule = ast.parse(code)\ntarget_func = module.body[0]\nif strip_decorators:\ntarget_func.decorator_list.clear()\nif strip_return:\n# FIXME: support only stripping final-line return\nif target_func.body and isinstance(\ntarget_func.body[-1],\nast.Return\n):\ntarget_func.body.pop()\nif strip_signature:\nbody = target_func.body\nout = unparse(body)\nelse:\nout = unparse(target_func)\nelse:\nout = code\nreturn out.strip()","test#Test":"import lk_logger\nfrom get_func_source import get_source\n\nlk_logger.setup(\nshow_source=False,\nshow_funcname=False,\n)\n\ndef decor(func):\nreturn func\n\n@decor\ndef aaa(\nbbb: int,\nccc: bool = False,\n) -> tuple:\nprint(bbb)\nprint(ccc)\nreturn (\nbbb,\nccc,\n)\n\nif __name__ == '__main__':\nprint(':di', 'source code')\nprint(get_source(aaa, strip_decorators=False))\nprint(':di', 'strip decorators')\nprint(get_source(aaa, strip_decorators=True))\nprint(':di', 'body only')\nprint(get_source(aaa, strip_decorators=True, body_only=True))\nthe output:"}},"/python/load-module-by-path":{"title":"Load Python Module by Path","data":{"":"import sys\nfrom importlib.util import module_from_spec\nfrom importlib.util import spec_from_file_location\nfrom os.path import basename\nfrom os.path import splitext\nfrom types import ModuleType\n\n\ndef load_module_from_file(path: str) -> ModuleType:\n\"\"\"\nref: https://blog.csdn.net/Likianta/article/details/126660058\n\"\"\"\nname = splitext(basename(path))[0]\nspec = spec_from_file_location(name, path)\n# print(spec.name, spec.origin)\nmodule = module_from_spec(spec)\nsys.modules[spec.name] = module\nspec.loader.exec_module(module)\nreturn module"}},"/python/pip-commonly-used":{"title":"Pip Commonly Used","data":{"":"","配置镜像#配置镜像":"","清华源#清华源":"# for temp use\npip install -i https://pypi.tuna.tsinghua.edu.cn/simple {package}\n\n# set as default\npip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple","私有源#私有源":"假设我的私有源地址为: https://pypi.xxx.com/simple永久配置:\npip config set global.extra-index-url https://pypi.xxx.com/simple\npip config set global.trusted-host pypi.xxx.com","pip-install#Pip Install":"","在-a-平台下载安装-b-平台的包-other-platforms#在 A 平台下载/安装 B 平台的包 (Other Platforms)":"平台选项:\nlinux\nmanylinux1_x86_64\nmanylinux_2_12_i686\nmanylinux_2_12_x86_64\nmanylinux_2_17_aarch64\nmanylinux_2_17_x86_64\nmanylinux2010_i686\nmanylinux2010_x86_64\nmanylinux2014_aarch64\nmanylinux2014_s390x\nmanylinux2014_x86_64\n\n\nmacos\nmacosx_10_9_x86_64\nmacosx_10_9_universal2\nmacosx_10_14_x86_64\nmacosx_11_0_arm64\n\n\nwindows\nwin_amd64\nwin32\n\n\n\n查询自己的 pc 平台:\nfrom distutils.util import get_platform\nprint(get_platform().replace('-', '_').replace('.', '_'))\n常用的是 manylinux2014_x86_64 和 win_amd64.\npip download --platform manylinux2014_x86_64 --only-binary :all: ...\n注意:\ncentos 7 可以用 manylinux2014_x86_64, 但是在 pip 安装时会报版本不兼容的错误 (比如 pyyaml), 为了抑制此错误, 我们可以强制安装: ...","linux-平台选项详细说明#Linux 平台选项详细说明":"从新到旧排列:\nmanylinux_<x>_<y>x, y 指向的是 glibc 的版本, 例如, 如果目标系统的 glibc 版本是 2.28, 则这里填 \"manylinux_2_28\".\nmanylinux2014_x86_64\nmanylinux2010_x86_64\nmanylinux1_x86_64\nlinux_x86_64\n\n参考:\nhttps://github.com/pypa/manylinux\nhttps://stackoverflow.com/questions/49672621/what-are-the-valid-values-for-platform-abi-and-implementation-for-pip-do/49673284\nhttps://labs.quansight.org/blog/2020/11/manylinux1-is-obsolete-manylinux2010-is-almost-eol-what-is-next/"}},"/python/poetry-memo":{"title":"Poetry 备忘","data":{"":"","command-alias#Command Alias":"alias po=\"poetry\"\nalias pob=\"poetry build -f wheel\"\nalias pox=\"poetry run python3\"","设置清华源#设置清华源":"[[tool.poetry.source]]\nname = 'tsinghua'\nurl = 'https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple/'\npriority = 'default'","添加可选依赖#添加可选依赖":"https://python-poetry.org/docs/pyproject#extras\nhttps://stackoverflow.com/questions/46775346/what-do-square-brackets-mean-in-pip-install\n\n\n\n[tool.poetry.dependencies]\npypinyin = { version = \"*\", optional = true }\nxlrd = { version = \"1.2.0\", optional = true }\nxlsxwriter = { version = \"*\", optional = true }\n\n[tool.poetry.extras]\nexl = [\"xlrd\", \"xlsxwriter\"]\nnlp = [\"pypinyin\"]\n\npip install \"my-package[nlp]\"\npip install \"my-package[exl]\"","添加特定平台版本的依赖#添加特定平台/版本的依赖":"下面描述的是一些经典的案例.\n[tool.poetry.dependencies]\npyside6 = { version = \">=6.4.0,!=6.5.0\", python = \"<3.12\"}\ntyping_extensions = { version = \"*\", python = \"<3.11\" }"}},"/python/qt-pyside-pyqt/auto-wrap-in-treewiget-cell":{"title":"TableWidget 单元格内容过长自动换行","data":{"":"from PySide6.QtWidgets import *\n\napp = QApplication()\nwin = QWidget()\nwin.resize(600, 400)\n\ntable = QTableWidget(win)\ntable.setRowCount(10)\ntable.setColumnCount(3)\ntable.setHorizontalHeaderLabels(['A', 'B', 'C'])\ntable.setColumnWidth(0, 200)  # 1. fixed column width\ntable.setWordWrap(True)  # 2. set word wrap mode\ntable.move(20, 20)\ntable.resize(560, 360)\n\nitem = QTableWidgetItem('ovuvuevuevue enyetuenwuevue ugbemugbem osas')\ntable.setItem(0, 0, item)\ntable.resizeRowToContents(0)  # 3. resize row to contents\n\nwin.show()\napp.exec()"}},"/python/qt-pyside-pyqt/qml/horizontal-scroll":{"title":"Flickable/ListView Horizontal Scroll","data":{"":"import QtQuick\nimport QtQuick.Controls\n\nFlickable {\nid: root\n\nflickableDirection: Flickable.HorizontalFlick\nScrollIndicator.horizontal: ScrollIndicator { }\n\n// fix the way to scroll by mouse wheel event\n// ref: https://stackoverflow.com/questions/61889210/how-to-make-qt5-qml\n//  -horizontal-listview-enable-mouse-scroll\nMouseArea {\nanchors.fill: parent\nonWheel: (wheel) => {\nroot.flick(wheel.angleDelta.y, 0)\n// root.flick(wheel.angleDelta.y * 10, 0)\nwheel.accepted = true\n}\n}\n}"}},"/python/qt-pyside-pyqt/qml/reactangle-radius-clip":{"title":"Rectangle Radius Clip","data":{"":"import QtQuick\nimport Qt5Compat.GraphicalEffects\n\nRectangle {\nid: _rect\nlayer.enabled: true\nlayer.effect: OpacityMask {\nmaskSource: Rectangle {\nwidth: _rect.width\nheight: _rect.height\nradius: _rect.radius\n}\n}\n}"}},"/python/streamlit":{"title":"Streamlit","data":{"":"","命令行#命令行":"# alias st=\"streamlit\"\n\nstreamlit run --help\n# run and open browser\nstreamlit run {script}\n# do not open browser\nstreamlit run --server.headless true {script}\n# run on localhost\nstreamlit run --server.headless true --server.address localhost --server.port {port} {script}\n注意:不能使用 3000 作为 port! 这看起来是一个 bug (issue).","调整-button-宽度#调整 Button 宽度":"https://discuss.streamlit.io/t/button-size-in-sidebar/36132/2\n\nimport streamlit as st\n\nst.markdown('''\n<style>\nsection[data-testid=\"stSidebar\"] div.stButton button {\nwidth: 20rem;\n}\n</style>\n''', unsafe_allow_html=True)\n\nwith st.sidebar:\nst.button('One')\nst.button('Two')\nst.button('Three')\nst.button('Four')","在前端打印日志#在前端打印日志":"keywords: console log logger print terminal\n\nimport lk_logger  # pip install lk-logger\nimport streamlit as st\n\nif 'log' not in st.session_state:\nst.session_state['log'] = []\n\nwith st.container():\nst.write('\\n\\n'.join(st.session_state['log']))\n\n# notice: session modification must be in main thread!\nlk_logger.update(async_=False)\nlk_logger.lk.add_pipe(st.session_state['log'].append)\n\nprint('hello')\nprint('world')"}},"/python/xlsxwriter":{"title":"XlsxWriter","data":{"":"","simple#Simple":"from xlsxwriter.workbook import Workbook\nfrom xlsxwriter.workbook import Worksheet\n\nbook: Workbook = Workbook(\nfilename=...,\noptions={'strings_to_numbers': True}\n)\nsheet: Worksheet = book.add_worksheet('sheet-1')\n...\nbook.close()","create-plot#Create plot":"..."}},"/python/watch-file-changes":{"title":"Watch File Changes And Do Something","data":{"":"https://dev.to/stokry/monitor-files-for-changes-with-python-1npj","requirements#Requirements":"lk-utils\nwatchdog >= 3.0","code#Code":"import typing as t\nfrom time import sleep\n\nfrom lk_utils import fs\nfrom watchdog.events import FileModifiedEvent\nfrom watchdog.events import FileSystemEventHandler\nfrom watchdog.observers import Observer\n\n\ndef on_file_change(filepath: str, callback: t.Callable) -> None:\nobserver = Observer()\nhandler = FileEventHandler(filepath, callback)\nobserver.schedule(handler, fs.parent(filepath), recursive=False)\n_polling(observer)\n\n\nclass FileEventHandler(FileSystemEventHandler):\ndef __init__(self, filepath: str, callback: t.Callable) -> None:\nsuper().__init__()\nself._filepath = fs.normpath(filepath, True)\nself._callback = callback\n\ndef on_modified(self, event: FileModifiedEvent) -> None:\n# print(event.src_path)\nif not event.is_directory:\nif event.src_path == self._filepath:\nself._callback()\n\n\ndef _polling(observer: Observer) -> None:\nprint(\"start polling. you can press `ctrl + c` to stop it.\")\nobserver.start()\ntry:\nwhile True:\nsleep(1)\nexcept KeyboardInterrupt:\nobserver.stop()\nprint(\"watchdog stopped\")\nfinally:\nobserver.join()"}},"/python/zipfiles":{"title":"Python 标准库 zipfile 压缩文件/文件夹","data":{"":"","压缩单个文件#压缩单个文件":"from zipfile import ZipFile\nwith ZipFile('output.zip', 'w') as z:\nz.write('input.txt')","压缩多个文件#压缩多个文件":"要求:\n将多个文件压缩后, 处于同一目录下 (也就是 zip 文件中, 不包含子目录结构)\n这些源文件可能来自不同的目录\n\n\nfrom os.path import basename\nfrom zipfile import ZipFile\n\ndef zip_files(*files):\nwith ZipFile('output.zip', 'w') as z:\nfor f in files:\nz.write(f, arcname=basename(f))","压缩单个目录#压缩单个目录":"讲解:压缩单个目录时, ZipFile 需要 write 目录, 以及目录下每一个文件 (包括子文件夹的文件) 的路径.这些路径在 zip 文件中有一个公共的前缀, 也就是根目录的目录名, 如下所示:\noutput.zip\n|= root  # 这是公共的前缀\n|- aaa.txt\n|- bbb.txt\n|= ccc\n|- ddd.txt\n\nimport os\nimport os.path\nfrom zipfile import ZipFile\n\ndef zip_dir(dir_):\nwith ZipFile('output.zip', 'w') as z:\nz.write(dir_, arcname=(dn := os.path.basename(dir_)))\nfor root, dirs, files in os.walk(dir_):\nfor fn in files:\nz.write(\nfp := os.path.join(root, fn),\narcname=dn + '/' + os.path.relpath(fp, dir_)\n#       ^^^^^^^^^^ 特别注意这里.\n)","压缩多个目录#压缩多个目录":"要求:\n取它们的公共路径部分作为前缀. 例如:输入:\nc:\n|= aaa\n|= mmm\n|- foo.txt\n|= nnn\n|- bar.txt\n输出:\nresult.zip\n|= mmm\n|- foo.txt\n|= nnn\n|- bar.txt\n\n\n\nimport os\nimport os.path\nfrom zipfile import ZipFile\n\ndef zip_dirs(*dirs):\nprefix = os.path.commonprefix(dirs)\nwith ZipFile('output.zip', 'w') as z:\nfor d in dirs:\nz.write(d, arcname=os.path.relpath(d, prefix))\nfor root, dirs, files in os.walk(d):\nfor fn in files:\nz.write(\nfp := os.path.join(root, fn),\narcname=os.path.relpath(fp, prefix)\n)","脚本#脚本":"我将上述片段合并到一个脚本里面了, 名称为 \"ziputil.py\", 代码如下:\nimport os\nimport os.path\nfrom zipfile import ZipFile\n\n\ndef zip_file(file_i: str, file_o: str) -> None:\nwith ZipFile(file_o, 'w') as z:\nz.write(file_i, arcname=(n := os.path.basename(file_i)))\nprint('zip_file:', n)\n\n\ndef zip_files(*files_i: str, file_o: str) -> None:\nwith ZipFile(file_o, 'w') as z:\nfor f in files_i:\nz.write(f, arcname=(n := os.path.basename(f)))\nprint('zip_files:', n)\n\n\ndef zip_dir(dir_i: str, file_o: str) -> None:\ndir_i_parent = os.path.dirname(dir_i)\nwith ZipFile(file_o, 'w') as z:\nz.write(dir_i, arcname=(n := os.path.basename(dir_i)))\nprint('zip_dir:', n)\nfor root, dirs, files in os.walk(dir_i):\nfor fn in files:\nz.write(\nfp := os.path.join(root, fn),\narcname=(n := os.path.relpath(fp, dir_i_parent)),\n)\nprint('zip_dir:', n)\n\n\ndef zip_dirs(*dirs_i: str, file_o: str) -> None:\nprefix = os.path.commonprefix(dirs_i)\nwith ZipFile(file_o, 'w') as z:\nfor d in dirs_i:\nz.write(d, arcname=(n := os.path.relpath(d, prefix)))\nprint('zip_dirs:', n)\nfor root, dirs, files in os.walk(d):\nfor fn in files:\nz.write(\nfp := os.path.join(root, fn),\narcname=(n := os.path.relpath(fp, prefix)),\n)\nprint('zip_dirs:', n)","实战-截图#实战 (截图)":""}},"/shell/bore-frp":{"title":"Bore FRP (内网穿透工具)","data":{"":"","download#Download":"official releases (binary file): https://github.com/ekzhang/bore/releases\ncd {download_dir}\ncurl -L -o bore.tar.gz https://github.com/ekzhang/bore/releases/download/v0.4.1/bore-v0.4.1-x86_64-unknown-linux-musl.tar.gz\ntar -xf bore.tar.gz","deploy#Deploy":"mkdir -p {apps_dir}/bore-frp\nmv bore {apps_dir}/bore-frp\n编辑 ~/.zshrc, 新增:\nexport PATH=\"{apps_dir}/bore-frp:$PATH\"\n测试:\nbore -h","run#Run":"bore server -s {password}\nrun in background:\n# https://blog.csdn.net/u010889390/article/details/50575345\n# https://juejin.cn/post/6844903865282265101\nnohup bore server -s {password} /dev/null 2>&1 &","connect-client#Connect (Client)":"bore client -s {password} -t {ip} -p {remote_port} {local_port}"}},"/shell/chrome-app-mode":{"title":"使用 Chrome App Mode 将网页转换为桌面应用","data":{"":"关键词: chrome-app-mode app-standalone webpage-to-desktop-app chrome-spa webview","快速演示#快速演示":"下面的命令是快速演示, 你可以复制该命令, 在命令行中直接打开看效果.","windows#Windows":"...","macos#macOS":"'/Applications/Google Chrome.app/Contents/MacOS/Google Chrome' --app='http://baidu.com' --window-size=800,600 --window-position=560,240 --user-data-dir='/tmp/chrome-app-mode-test'","截图#截图":"...","命令格式#命令格式":"<chrome_app> \\\n--app=<url> \\\n--window-size=<width>,<height> \\\n--window-position=<x>,<y> \\\n--user-data-dir=<any_temp_directory>\n注意事项:\n要想让 --window-size 或 --window-position 生效, 必须定义 --user-data-dir 参数.\nps: 网上有人说把 --user-data-dir=... 替换成 --chrome-frame 也行, 但本人测试不生效.\n\n\n如果不指定 --window-position=<x>,<y>, 则默认打开时位于屏幕左上角. 如需让打开时居中, 请继续阅读下面的章节.","让-app-启动后位于屏幕中央#让 App 启动后位于屏幕中央":"公式:\n# center_window.py\n\ndef get_app_pos(\nscreen_size: tuple[int, int],\napp_size: tuple[int, int] = (800, 600)\n) -> tuple[int, int]:\nw0, h0 = screen_size\nw1, h1 = app_size\nx = int((w0 - w1) / 2)\ny = int((h0 - h1) / 2)\nprint('--------------------------')\nprint(f' screen size: {w0:>4} | {h0:<4}')\nprint(f'    app size: {w1:>4} | {h1:<4}')\nprint(f'     app pos: {x:>4} | {y:<4}')\nreturn x, y\n\nif __name__ == '__main__':\nget_app_pos((1280, 720))\nget_app_pos((1920, 1080))\nget_app_pos((2560, 1440))\nget_app_pos((3840, 2160))\n代码运行截图:...快速参考表:(假设 app 大小为 800 x 600.)\nscreen size\tapp position\t1920 x 1080\t560,240\t2560 x 1440\t880,420\t...","遗留问题#遗留问题":"关闭 app 不能彻底结束进程. 你需要在命令行中按 ctrl + c 强制停止.\n在 macos 中, nushell 不能使用上述方法. 你需要先退出 nushell.","参考链接#参考链接":"https://gist.github.com/arkadiusjonczek/8836e724a53ddd55362644745cf8ca4c\nhttps://stackoverflow.com/a/19789383\nhttps://stackoverflow.com/a/26962811"}},"/shell/ssh-keygen":{"title":"使用 SSH-Keygen 生成 SSH 密钥","data":{"":"","windows#Windows":"第一步, 生成 ssh 公钥和私钥.\nssh-keygen -t rsa\n# 接下来进入交互式步骤\n# 1. 询问要保存的位置, 建议使用默认位置 (c:/users/<username>/.ssh), 这样\n#    github desktop 可以自动识别\n# 2. 询问是否输入密码, 可以留空\n# 完成后, 会出现一张随机字符画:\n# +---[RSA 3072]----+\n# |+.*=o.++         |\n# |.o.=o.++         |\n# |. . .oo.o .      |\n# |o . . .. + o   . |\n# |.o.= .o S . . + .|\n# | oo++= +   . + o |\n# | .oo= + .   . E  |\n# |  +o             |\n# | ....            |\n# +----[SHA256]-----+\n上述步骤完成后, 在 c:/users/<username>/.ssh 目录下会出现 \"id_rsa\" 和 \"id_rsa.pub\" 文件.\"id_rsa.pub\" 是公钥. 将它用记事本打开, 全选并复制.来到 github 或者 gitlab 的设置 - ssh 管理页面, 添加 ssh key.","macos#macOS":"生成步骤和 windows 一样:\nssh-keygen -t rsa\n注意生成的 ssh 文件位于用户目录下的隐藏文件夹: ~/.ssh.拷贝 ~/.ssh/id_rsa.pub 中的内容:\npbcopy < ~/.ssh/id_rsa.pub\n# 或者直接用记事本打开该文件, 全选复制.\n之后是粘贴, 和 windows 一样.","参考#参考":"https://zhongguo.eskere.club/%E5%A6%82%E4%BD%95%E5%9C%A8-mac-%E4%B8%8A%E4%BD%BF%E7%94%A8-ssh-keygen-%E7%94%9F%E6%88%90-ssh-%E5%AF%86%E9%92%A5/2021-09-19/","注意事项#注意事项":"github desktop 务必在设置中开启 \"use system openssh\" 选项."}},"/shell/windows/create-relative-path-lnk-file":{"title":"Windows 通过 BAT 脚本创建相对路径的快捷方式","data":{"":"网上没有找到相关的结果. 这是我综合多个答案的线索找到的一个简单有效的方案.本文解决以下问题:\nbat 怎么创建快捷方式\n快捷方式需要带上图标\n快捷方式怎么用相对路径 (这样可以把快捷方式的启动器放入自己的应用, 打包发给别人也能使用)\n\n注: 该教程的目的是帮助开发者快速封装自己的 bat 启动器为 lnk 格式, 并添加自己的启动器图标, 提升应用美观性.","快速开始#快速开始":"直接拷贝下个章节提供的源代码, 保存为 \"create_relative_shortcut.bat\" 文件. 通过 cmd 调用:\n# 使用示例\ncreate_relative_shortcut.bat E:\\test\\my_script.bat E:\\test\\my_script.lnk my_script.bat E:\\test\\launcher.ico\n\n# 命令格式: create_relative_shortcut.bat <file_i> <file_o> <relative_path> <icon>\n# relative_path:\n# 相对路径, 推荐使用 file_i 相对于 file_o 的路径.\n# 在本示例中, 生成的相对路径指向 \"./my_script.bat\".\n# 该参数可自定义, 也可以传一个事先不存在的路径. 例如, 填 \"..\\my_script.bat\",\n# 则生成的快捷方式在启动时会往它的上级目录找 my_script.bat.\n# icon:\n# 这是一个可选参数. 如果不传这个参数, 则使用快捷方式的默认图标.\n大概不到 1 秒即可生成.","源代码及详细注释#源代码及详细注释":"注意: 下面放了有注释版和无注释版的源代码, 经个人测试有注释版的因不明原因运行到一半就结束了; 无注释版的可以正常使用. 该问题正在修复中, 在修复完成前, 请复制无注释版的源码保存.\ncreate_relative_shortcut.bat (有注释版)\n@REM 关闭打印\n@echo off\n\n@REM 接收传入的参数\nset file_i=%1\nset file_o=%2\nset relative_path=%3\nset icon=%4\n\n@REM 由于 icon 是可选参数, 如果用户没有传值, 则 icon 会变成 '%4', 这里要处理下.\necho %icon%| findstr .ico >nul || (\nset icon=\"\" && echo invalid icon or no icon passed, will ignore it.\n)\n\n@REM 切换到当前目录 (注: 该操作不是必须的).\ncd %cd%\n\n@REM 创建一个临时的 vbs 脚本, 写入以下内容.\n@REM 创建一个 wscript.shell 对象.\necho set wshell = WScript.CreateObject(\"WScript.Shell\") > create_shortcut.vbs\n@REM 在 vbs 脚本中声明 file_o 变量.\necho file_o = \"%file_o%\" >> create_shortcut.vbs\n@REM 创建一个 shortcut 对象.\necho set shortcut = wshell.CreateShortcut(file_o) >> create_shortcut.vbs\n@REM 下面开始设置 shortcut 对象的属性.\n@REM 1. 将目标路径设置为 cmd.exe. 我们可以用 %comspec% 或者\n@REM    %windir%\\system32\\cmd.exe 来表示.\necho shortcut.TargetPath = \"%comspec%\" >> create_shortcut.vbs\n@REM 2. cmd.exe /c relative_path 该指令用于在 cmd.exe 中执行目标 bat 文件.\n@REM    /c 参数表示执行完关闭 cmd. 更多请参考此链接:\n@REM        https://blog.csdn.net/halaoda/article/details/78778477\necho shortcut.Arguments = \"/c %relative_path%\" >> create_shortcut.vbs\n@REM 3. 将 \"快捷方式所在目录\" 设置为起始目录 (这样相对路径才能相对于快捷方式的\n@REM    位置来查找).\n@REM    注意这里双写百分号用来避免百分号被转义 (即双写百分号表示单个 \"%\").\necho shortcut.WorkingDirectory = \"%%cd%%\" >> create_shortcut.vbs\n@REM 4. 添加快捷方式描述 (可选).\necho shortcut.Description = \"\" >> create_shortcut.vbs\n@REM 5. 添加快捷方式图标 (可选).\necho shortcut.IconLocation = \"%icon%\" >> create_shortcut.vbs\n@REM 6. 保存 vbs 脚本.\necho shortcut.Save() >> create_shortcut.vbs\n\n@REM 执行 vbs 脚本.\ncscript create_shortcut.vbs\n@REM 删除临时的 vbs 脚本.\ndel create_shortcut.vbs\ncreate_relative_shortcut.bat (无注释版)\n@echo off\n\nset file_i=%1\nset file_o=%2\nset relative_path=%3\nset icon=%4\n\necho %icon%| findstr .ico >nul || (\nset icon=\"\" && echo invalid icon or no icon passed, will ignore it.\n)\n\ncd %cd%\n\necho set wshell = WScript.CreateObject(\"WScript.Shell\") > create_shortcut.vbs\necho file_o = \"%file_o%\" >> create_shortcut.vbs\necho set shortcut = wshell.CreateShortcut(file_o) >> create_shortcut.vbs\necho shortcut.TargetPath = \"%comspec%\" >> create_shortcut.vbs\necho shortcut.Arguments = \"/c %relative_path%\" >> create_shortcut.vbs\necho shortcut.WorkingDirectory = \"%%cd%%\" >> create_shortcut.vbs\necho shortcut.Description = \"\" >> create_shortcut.vbs\necho shortcut.IconLocation = \"%icon%\" >> create_shortcut.vbs\necho shortcut.Save() >> create_shortcut.vbs\n\ncscript create_shortcut.vbs\ndel create_shortcut.vbs","截图#截图":"","注意事项#注意事项":"icon 的文件类型必须为 .ico 格式快捷方式图标仅支持 ico 格式. 如果手上只有 png, jpg 等格式, 请通过 在线网站 转换.icon 必须使用绝对路径不知道是不是个人现象, icon 参数似乎必须传绝对路径, 否则无法正确生成图标.第三方文件管理器问题如果你使用的是 windows 第三方文件管理器 (如 xyplorer, clover 等), 则有可能会出现 lnk 打开闪退的问题. 但是换用 windows 自带管理器是正常使用的.这是因为 xyplorer 的 cmd.exe 进程是不同步的, 请尝试重启 xyplorer 解决.","扩展用法#扩展用法":"","在-python-中调用#在 Python 中调用":"import os\nfrom lk_utils import run_cmd_args  # pip install lk-utils\nrun_cmd_args(\nr'E:\\test\\create_relative_shortcut.bat',\nfile_i := r'E:\\test\\hello_world.bat',\nfile_o := r'E:\\test\\hello_world.bat',\nos.path.relpath(file_i, os.path.dirname(file_o)),\nos.path.abspath('launcher.ico')\n)","参考#参考":"Bat 通过 VBS 嵌入式脚本创建快捷方式: https://stackoverflow.com/questions/30028709/how-do-i-create-a-shortcut-via-command-line-in-windows\nVBS, WScript.Shell, CreateShortcut 更多参数用法: https://stackoverflow.com/questions/35783889/make-relative-shortcut-to-relative-target"}}}